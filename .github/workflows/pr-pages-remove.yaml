name: Remove pull request deployment

on:
  pull_request:
    types: [closed]
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  remove_stale_deployments:
    runs-on: ubuntu-latest
    steps:
      - name: Check whether PR has deployment
        env:
          EVENT: ${{ toJSON(github.event) }}
        run: |
          set -eux

      - name: Get currently open pull requests
        id: pull_requests
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/pulls
          repository: ${{ github.repository }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Check out `gh-pages`
        uses: actions/checkout@v3
        with:
          ref: gh-pages

      - name: Get deployments
        id: deployments
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/deployments
          repository: ${{ github.repository }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Get currently deployed pull requests
        env:
          DEPLOYMENTS: ${{ steps.deployments.outputs.data }}
          PULL_REQUESTS: ${{ steps.pull_requests.outputs.data }}
        run: |
          readarray -t DEPLOYMENT_DETAILS < <(echo ${DEPLOYMENTS} \
            | jq --raw-output '.[] | select(.environment | match("dev")) | "\( .ref ) \( .description ) \( .id )"')

          echo "deployments:"
          for deployment in "${DEPLOYMENT_DETAILS[@]}"; do
            read -r details <<<${deployment}
            echo "ref:         ${details[0]}"
            echo "description: ${details[1]}"
            echo "id:          ${details[2]}"
          done

          echo "open pull requests"
          echo ${PULL_REQUESTS} \
            | jq --raw-output '.[].number'

          echo "deployed directories"
          ls -lh dev

      - name: Delete deployment
        run: true

      - name: Clean `gh-pages`
        run: true
